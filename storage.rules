rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the file
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to validate file type
    function isValidFileType() {
      return request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('text/.*');
    }
    
    // Helper function to validate file size (10MB max)
    function isValidFileSize() {
      return request.resource.size < 10 * 1024 * 1024;
    }
    
    // Resume files - users can only access their own files
    match /resumes/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isOwner(userId);
    }
    
    // Profile images - users can only access their own images
    match /profiles/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && request.resource.contentType.matches('image/.*') && isValidFileSize();
      allow delete: if isOwner(userId);
    }
    
    // General uploads - users can only access their own files
    match /uploads/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isOwner(userId);
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 